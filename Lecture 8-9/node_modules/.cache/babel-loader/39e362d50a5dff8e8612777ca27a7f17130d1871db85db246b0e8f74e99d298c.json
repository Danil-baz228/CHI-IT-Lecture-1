{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axiosInstance from '../../api/axiosInstance';\nexport const login = createAsyncThunk('user/login', async credentials => {\n  const response = await axiosInstance.post('/login', credentials);\n  return response.data;\n});\nexport const register = createAsyncThunk('user/register', async credentials => {\n  const response = await axiosInstance.post('/register', credentials);\n  return response.data;\n});\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null,\n    status: 'idle',\n    loading: false,\n    // Добавляем свойство loading\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(login.fulfilled, (state, action) => {\n      state.user = action.payload;\n      localStorage.setItem('token', action.payload.token);\n    }).addCase(register.fulfilled, (state, action) => {\n      state.user = action.payload;\n      localStorage.setItem('token', action.payload.token);\n    });\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","login","credentials","response","post","data","register","userSlice","name","initialState","user","status","loading","error","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","localStorage","setItem","token","reducer"],"sources":["C:/Users/user/Desktop/dzInternatura/Lecture8/my-social-app/src/store/slices/userSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axiosInstance from '../../api/axiosInstance';\r\n\r\nexport const login = createAsyncThunk('user/login', async (credentials: { email: string, password: string }) => {\r\n  const response = await axiosInstance.post('/login', credentials);\r\n  return response.data;\r\n});\r\n\r\nexport const register = createAsyncThunk('user/register', async (credentials: { email: string, password: string }) => {\r\n  const response = await axiosInstance.post('/register', credentials);\r\n  return response.data;\r\n});\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n    status: 'idle',\r\n    loading: false,  // Добавляем свойство loading\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.user = action.payload;\r\n        localStorage.setItem('token', action.payload.token);\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.user = action.payload;\r\n        localStorage.setItem('token', action.payload.token);\r\n      });\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,aAAa,MAAM,yBAAyB;AAEnD,OAAO,MAAMC,KAAK,GAAGF,gBAAgB,CAAC,YAAY,EAAE,MAAOG,WAAgD,IAAK;EAC9G,MAAMC,QAAQ,GAAG,MAAMH,aAAa,CAACI,IAAI,CAAC,QAAQ,EAAEF,WAAW,CAAC;EAChE,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAGP,gBAAgB,CAAC,eAAe,EAAE,MAAOG,WAAgD,IAAK;EACpH,MAAMC,QAAQ,GAAG,MAAMH,aAAa,CAACI,IAAI,CAAC,WAAW,EAAEF,WAAW,CAAC;EACnE,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,MAAME,SAAS,GAAGT,WAAW,CAAC;EAC5BU,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,KAAK;IAAG;IACjBC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAChB,KAAK,CAACiB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3CD,KAAK,CAACT,IAAI,GAAGU,MAAM,CAACC,OAAO;MAC3BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,MAAM,CAACC,OAAO,CAACG,KAAK,CAAC;IACrD,CAAC,CAAC,CACDP,OAAO,CAACX,QAAQ,CAACY,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACT,IAAI,GAAGU,MAAM,CAACC,OAAO;MAC3BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,MAAM,CAACC,OAAO,CAACG,KAAK,CAAC;IACrD,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}